# definir a variavel de ambiente flask app $env:FLASK_APP = "src.finalProject.app:app"
# poetry run flask run
[tool.poetry]
name = "AF Crypto"
version = "0.1.0"
description = "A Flask application project"
authors = ["AngeloPV e felipesssoa"]

# Caminho para o README do projeto 
readme = "README.md"

# include = "finalProject": Isso especifica que o pacote a ser incluído se chama finalProject.
# from = "src": Indica que o código-fonte está localizado dentro do diretório src/.
packages = [
    { include = "finalProject", from = "src" }
]


# poetry lock quando faz mudanças nas versões das dependências no pyproject.toml e precisa atualizar o poetry.lock para refletir essas mudanças.
# poetry install quando você configurar o projeto pela primeira vez, ou quando o poetry.lock for atualizado e você deseja garantir que todas as dependências estejam instaladas conforme especificado.
# Use poetry update para atualizar as dependências existentes.
# Declara a dependência na versão ou superior.
[tool.poetry.dependencies]
python = "^3.11"

email_validator = "^2.2.0"
password-validator = "^1.0"
validate-docbr = "^1.10.0"
phonenumbers = "^8.13.44"
bcrypt = "^4.2.0"

flask = "^3.0.3"
Flask-Mail = "^0.9.1"
premailer = "^3.10.0"
Jinja2= "^3.1.4"

qrcode = "^7.4.2"

python-dotenv = "^1.0.1"
matplotlib= "^3.9.2"
PyMySQL= "^1.1.1"
pandas= "^2.2.2"
requests= "^2.32.3"
numpy= "^2.0.1"
scipy= "^1.14.0"
blinker= "^1.8.2"
pillow= "^10.4.0"
tzdata= "^2024.1"

# é uma forma de definir comandos personalizados que podem ser executados com poetry run
# finalproject = "finalProject.app:app": Define um script de entrada,
# finalProject.app refere-se ao módulo app.py dentro do diretório finalProject/, e app é a instância do Flask
boto3 = "^1.35.25"
libretranslatepy = "^2.1.4"
plotly = "^5.24.1"
eventlet = "^0.37.0"
flask-socketio = "^5.4.1"

web3 = "6.9.0"
bit = "^0.8.0"

[tool.poetry.scripts]
flask-run = "flask run --app src.finalProject.app:app"


# Liste as dependências que são necessárias apenas para o desenvolvimento e testes:
[tool.poetry.dev-dependencies]
pytest = "^7.0"



# Define as dependências necessárias para construir o projeto, com o backend de construção usando poetry-core.
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
